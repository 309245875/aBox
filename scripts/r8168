#!/bin/bash
# Author: Aniverse
# https://github.com/Aniverse/aBox

####################################################################################################

script_update=2020.06.18
script_version=r21026

####################################################################################################
usage_guide() {
bash <(wget -qO- https://github.com/Aniverse/aBox/raw/master/scripts/r8168)
s=/usr/local/bin/r8168 ; rm -f $s ; nano $s ; chmod 755 $s
# apt-get install -y r8168-dkms
}

####################################################################################################

black=$(tput setaf 0)   ; red=$(tput setaf 1)          ; green=$(tput setaf 2)   ; yellow=$(tput setaf 3);  bold=$(tput bold)
blue=$(tput setaf 4)    ; magenta=$(tput setaf 5)      ; cyan=$(tput setaf 6)    ; white=$(tput setaf 7) ;  normal=$(tput sgr0)
on_black=$(tput setab 0); on_red=$(tput setab 1)       ; on_green=$(tput setab 2); on_yellow=$(tput setab 3)
on_blue=$(tput setab 4) ; on_magenta=$(tput setab 5)   ; on_cyan=$(tput setab 6) ; on_white=$(tput setab 7)
shanshuo=$(tput blink)  ; wuguangbiao=$(tput civis)    ; guangbiao=$(tput cnorm) ; jiacu=${normal}${bold}
underline=$(tput smul)  ; reset_underline=$(tput rmul) ; dim=$(tput dim)
standout=$(tput smso)   ; reset_standout=$(tput rmso)  ; title=${standout}
baihuangse=${white}${on_yellow}; bailanse=${white}${on_blue} ; bailvse=${white}${on_green}
baiqingse=${white}${on_cyan}   ; baihongse=${white}${on_red} ; baizise=${white}${on_magenta}
heibaise=${black}${on_white}   ; heihuangse=${on_yellow}${black}

####################################################################################################

[[ $EUID != 0 ]] && echo -e "没 root 跑个蛋" && exit 1

CODENAME=$(cat /etc/os-release | grep VERSION= | tr '[A-Z]' '[a-z]' | sed 's/\"\|(\|)\|[0-9.,]\|version\|lts//g' | awk '{print $2}')
kernel=$(uname -r)
kernelvvv=$(uname -r | grep -oE [0-9.-]+ | head -1)
KNA=$(awk -F'[= "]' '/PRETTY_NAME/{print $3}' /etc/os-release)
KernelBit=$(getconf LONG_BIT)

[ -n "$(grep 'eth0:' /proc/net/dev)" ] && wangka1=eth0 || wangka1=`cat /proc/net/dev |awk -F: 'function trim(str){sub(/^[ \t]*/,"",str); sub(/[ \t]*$/,"",str); return str } NR>2 {print trim($1)}'  |grep -Ev '^lo|^sit|^stf|^gif|^dummy|^vmnet|^vir|^gre|^ipip|^ppp|^bond|^tun|^tap|^ip6gre|^ip6tnl|^teql|^venet|^he-ipv6|^docker' |awk 'NR==1 {print $0}'`
wangka2=$(ip link show | grep -i broadcast | grep -m1 UP  | cut -d: -f 2 | cut -d@ -f 1 | sed 's/ //g')

if [[ -n $wangka2 ]]; then
    if [[ $wangka1 == $wangka2 ]];then
        interface=$wangka1
    else
        interface=$wangka2
    fi
else
    interface=$wangka1
fi

mkdir -p /log

####################################################################################################

function check_apps() {
    echo -e "${bold}Checking necessary dependency ...${normal}"
    command -v ifconfig  | grep -q ifcon  || apt-get install -y net-tools
    command -v ethtool   | grep -q ethtoo || apt-get install -y ethtool
    command -v iperf     | grep -q iperf  || apt-get install -y iperf
    command -v iperf3    | grep -q iperf3 || apt-get install -y iperf3
}

function show_headers() {
    echo -e "${bold}Kernel and headers installed in your system${yellow}"
    echo $kernel
    dpkg -l | grep linux-headers | grep $kernelvvv | awk '{print $2}'
    echo -e "${normal}"
}

function show_iface() {
    echo -e "${bold}The followings are details about your current interface${yellow}"
    echo "Interface: $interface"
    ethtool -i $interface
    echo -e "${normal}"
}

function kill_appex() {
    [[ -f /appex/bin/serverSpeeder.sh ]] && { /appex/bin/serverSpeeder.sh  stop ; /appex/bin/serverSpeeder.sh  status ; ruisu=y ; }
    [[ -f /appex/bin/lotServer.sh     ]] && { /appex/bin/lotServer.sh      stop ; /appex/bin/lotServer.sh      status ; ruisu=y ; }
    [[ -z $ruisu ]] && echo -e "\n${red}No ServerSpeeder or LotServer Found${normal}\n" || echo -e "\n${red}ServerSpeeder or LotServer has been shut down ...${normal}\n"
}

function ask_iperf() {
    echo
    read -ep "${bold}${red}Would you like to do iperf test? [Y/n]${normal} " responce
    case $responce in
        [yY] | [yY][Ee][Ss] | "") do_iperf ;;
        [nN] | [nN][Oo]         ) sleep 0  ;;
        *                       ) do_iperf ;;
    esac
}

function do_iperf() {
    echo -e "\n${bold}${cyan}iperf -c iperf.ovh.net -i 1 -t 4${normal}"
    iperf -c iperf.ovh.net -i 1 -t 4
    echo -e "\n${bold}${cyan}iperf3 -c ping-ams1.online.net -p 5203 -t 4${normal}"
    iperf3 -c ping-ams1.online.net -p 5203 -t 4
    echo -e "\n${bold}${cyan}iperf3 -c bouygues.testdebit.info -p 5203 -4 -t 4${normal}"
    iperf3 -c bouygues.testdebit.info -p 5203 -4 -t 4
    echo -e "\n${bold}${cyan}DONE${normal}\n"
}

####################################################################################################

function r8168_driver() {
    # read -ep "${bold}确定 headers 已经安装、内核已安装并重启过了？${normal}"
    for app in dkms ; do # firmware-realtek
        dpkg -l | grep $app -q && apt-get purge -y $app
    done

    apt-get update && apt-get install -y build-essential libelf-dev ; echo
    [[ $CODENAME == buster ]] && install_old_binutils
    rm -rf r8168-8.046.00.tar.bz2 r8168-8.046.00
    wget -O r8168-8.046.00.tar.bz2 https://github.com/Aniverse/inexistence-files/raw/master/firmware/r8168-8.046.00.tar.bz2
    tar xfvj r8168-8.046.00.tar.bz2; rm -rf r8168-8.046.00.tar.bz2 ; cd r8168-8.046.00
    # https://community.hetzner.com/tutorials/installing-the-r8168-driver?title=Installation_des_r8168-Treibers/en
    # make modules
    # echo ; read -ep "${bold}Press ${baihongse}ENTER${jiacu} to continue ${normal}"
    if [[ $self == 1 ]]; then
        r8168_autorun
    else
        { ./autorun.sh || modprobe r8169 ; } 2>&1 | tee -a /log/r8168.log
    fi
    cd .. ; rm -rf r8168-8.046.00

    [[ $reboot == y ]] && { reboot -f ; init 6 ; }
    show_iface
    ask_iperf
}

####################################################################################################

function r8168_dkms() {
    for app in firmware-realtek dkms ; do
        dpkg -l | grep $app -q && apt-get purge -y $app
    done

    apt-get update && apt-get install -y dkms | tee -a /log/r8168.log 

    if [[ $CODENAME == bionic  ]]; then
        headers_list="$(apt-cache search linux-image-4.15.0.*generic | sort | tail -1 | awk '{print $1}')         $(apt-cache search linux-headers-4.15.0.*generic | sort | tail -1 | awk '{print $1}')"
    elif [[ $CODENAME == xenial  ]]; then
        headers_list="$(apt-cache search linux-image-4.4.0.*generic  | sort | tail -1 | awk '{print $1}')         $(apt-cache search linux-headers-4.4.0.*generic  | sort | tail -1 | awk '{print $1}')"
    elif [[ $CODENAME == jessie  ]]; then
        headers_list="$(apt-cache search linux-image-3.16.0.*amd64   | grep -Ev "rt|cloud|unsigned|dbg" | sort | tail -1 | awk '{print $1}')        $(apt-cache search linux-headers-3.16.0.*amd64 | grep -Ev "rt|cloud|unsigned|dbg" | sort | tail -1 | awk '{print $1}')"
    elif [[ $CODENAME == stretch ]]; then
        headers_list="$(apt-cache search linux-image-4.9.0.*amd64    | grep -Ev "rt|cloud|unsigned|dbg" | sort | tail -1 | awk '{print $1}')        $(apt-cache search linux-headers-4.9.0.*amd64  | grep -Ev "rt|cloud|unsigned|dbg" | sort | tail -1 | awk '{print $1}')"
    elif [[ $CODENAME == buster  ]]; then
        headers_list="$(apt-cache search linux-image-4.19.0.*amd64   | grep -Ev "rt|cloud|unsigned|dbg" | sort | tail -1 | awk '{print $1}')        $(apt-cache search linux-headers-4.19.0.*amd64 | grep -Ev "rt|cloud|unsigned|dbg" | sort | tail -1 | awk '{print $1}')"
    fi

    [[ -n "$headers_list" ]] && apt-get purge -y "$headers_list"
    wget https://github.com/Aniverse/inexistence-files/raw/master/firmware/r8168-dkms_8.040.00-1_all.deb -O r8168-dkms_8.040.00-1_all.deb
    dpkg -i r8168-dkms_8.040.00-1_all.deb
    rm -f r8168-dkms_8.040.00-1_all.deb

    [[ $reboot == y ]] && { reboot -f ; init 6 ; }
    show_iface
    ask_iperf
}







####################################################################################################



# https://github.com/JiangXL/ColorMapping/issues/1
# https://www.reddit.com/r/linuxquestions/comments/903xwq/unable_to_compile_working_kernel_modules_anymore/
function install_old_binutils() {
    echo -e "${bold}Downgrading binutils to 2.30-22 ...${normal}"
	echo "deb http://snapshot.debian.org/archive/debian/20180625T120000Z/ sid main" > /etc/apt/sources.list.d/old.binutils.list
	apt-get -o Acquire::Check-Valid-Until=false update
	apt-get install -y --allow-downgrades binutils:amd64=2.30-22 binutils-common:amd64=2.30-22 binutils-dev:amd64=2.30-22 binutils-x86-64-linux-gnu:amd64=2.30-22 libbinutils:amd64=2.30-22
    rm -f /etc/apt/sources.list.d/old.binutils.list
    apt-get update
}

function _excute() {
	($1 2>&1 | tee -a /log/r8168.log )
}

function rmmod_old_driver(){
    echo "Check old driver and unload it."
    check=`lsmod | grep r8169`
    if [ "$check" != "" ]; then
            echo "rmmod r8169"
            /sbin/rmmod r8169
    fi
    
    check=`lsmod | grep r8168`
    if [ "$check" != "" ]; then
            echo "rmmod r8168"
            /sbin/rmmod r8168
    fi
}

function r8168_autorun() {
    TARGET_PATH=$(find /lib/modules/$(uname -r)/kernel/drivers/net/ethernet -name realtek -type d)
    if [ "$TARGET_PATH" = "" ]; then
    	TARGET_PATH=$(find /lib/modules/$(uname -r)/kernel/drivers/net -name realtek -type d)
    fi
    if [ "$TARGET_PATH" = "" ]; then
    	TARGET_PATH=/lib/modules/$(uname -r)/kernel/drivers/net
    fi
    echo

    echo "Build the module and install"    | tee -a /log/r8168.log 
    echo "-------------------------------" | tee -a /log/r8168.log 
    echo "$(date "+%Y%m%d.%H%M")" | tee -a /log/r8168.log 
    _excute "make $@ all"
    module=`ls src/*.ko`
    module=${module#src/}
    module=${module%.ko}

    if [ "$module" = "" ]; then
    	echo "No driver exists!!!" | tee -a /log/r8168.log 
    	exit 1
    elif [ "$module" != "r8169" ]; then
    	if test -e $TARGET_PATH/r8169.ko ; then
    		echo "Backup r8169.ko" | tee -a /log/r8168.log 
    		if test -e $TARGET_PATH/r8169.bak ; then
    			i=0
    			while test -e $TARGET_PATH/r8169.bak$i
    			do
    				i=$(($i+1))
    			done
    			echo "rename r8169.ko to r8169.bak$i" | tee -a /log/r8168.log 
    			_excute "mv $TARGET_PATH/r8169.ko $TARGET_PATH/r8169.bak$i"
    		else
    			echo "rename r8169.ko to r8169.bak" | tee -a /log/r8168.log 
    			_excute "mv $TARGET_PATH/r8169.ko $TARGET_PATH/r8169.bak"
    		fi
    	fi
    fi

    echo "DEPMOD $(uname -r)" | tee -a /log/r8168.log 
    _excute "depmod $(uname -r)"
    echo "load module $module" | tee -a /log/r8168.log 
    _excute "modprobe $module"
    
    echo "blacklist r8169" >> /etc/modprobe.d/blacklist.conf
    echo "r8168" >> /etc/initramfs-tools/modules

    is_update_initramfs=n
    distrib_list="ubuntu debian"

    if [ -r /etc/debian_version ]; then
    	is_update_initramfs=y
    elif [ -r /etc/lsb-release ]; then
    	for distrib in $distrib_list
    	do
    		/bin/grep -i "$distrib" /etc/lsb-release 2>&1 /dev/null && \
    			is_update_initramfs=y && break
    	done
    fi

    if [ "$is_update_initramfs" = "y" ]; then
    	if which update-initramfs >/dev/null ; then
    		echo "Updating initramfs. Please wait." | tee -a /log/r8168.log 
    		_excute "update-initramfs -u -k $(uname -r)"
    	else
    		echo "update-initramfs: command not found" | tee -a /log/r8168.log 
    		exit 1
    	fi
    fi

    echo "Completed." | tee -a /log/r8168.log 
    exit 0
}



####################################################################################################




check_apps
kill_appex
show_iface
show_headers

echo -e "${green}1)${normal} Compile r8168 driver"
echo -e "${green}2)${normal} Install r8168 via dkms"
echo -e "${green}3)${normal} Compile r8168 driver and then reboot"
echo -e "${green}4)${normal} Install r8168 via dkms and then reboot"
echo -e "${green}5)${normal} Compile r8168 driver using modified autorun.sh"
echo -e "${green}6)${normal} rmmod r8169 and then reboot"
echo -e "${green}99)${normal} Do iperf test"
read -ep "${bold}${yellow}What would you like to do ? ${normal}" responce
case $responce in
    1 ) r8168_driver ;;
    2 ) r8168_dkms ;;
    3 ) reboot=y ; r8168_driver ;;
    4 ) reboot=y ; r8168_dkms ;;
    5 ) self=1   ; r8168_driver ;;
    6 ) echo "rmmod r8169" ; /sbin/rmmod r8169 ; reboot -f ; init 6 ;;
    99) do_iperf ;;
    * ) exit 1 ;;
esac

















####################################################################################################















function Notes() {
############ Debian 9 ############
dh-python distro-info-data file libmagic-mgc libmagic1 libmpdec2 libpython3-stdlib libpython3.5-minimal
libpython3.5-stdlib linux-compiler-gcc-6-x86 linux-headers-4.9.0-8-amd64 linux-headers-4.9.0-8-common
linux-headers-amd64 linux-kbuild-4.9 lsb-release mime-support python3 python3-minimal python3.5 python3.5-minimal
############
(Reading database ... 44527 files and directories currently installed.)
Preparing to unpack r8168-dkms_8.040.00-1_all.deb ...

------------------------------
Deleting module version: 8.040.00
completely from the DKMS tree.
------------------------------
Done.
Unpacking r8168-dkms 8.040.00-1 over 8.040.00-1 ...
Setting up r8168-dkms 8.040.00-1 ...
Loading new r8168-8.040.00 DKMS files...
Building for 3.16.0-4-amd64
Building initial module for 3.16.0-4-amd64
Done.

r8168:
Running module version sanity check.
 - Original module
   - No original module exists within this kernel
 - Installation
   - Installing to /lib/modules/3.16.0-4-amd64/updates/dkms/

depmod....

Backing up initrd.img-3.16.0-4-amd64 to /boot/initrd.img-3.16.0-4-amd64.old-dkms
Making new initrd.img-3.16.0-4-amd64
(If next boot fails, revert to initrd.img-3.16.0-4-amd64.old-dkms image)
update-initramfs....

DKMS: install completed.

########################

Check old driver and unload it.
rmmod r8169
Build the module and install
At main.c:160:
- SSL error:02001002:system library:fopen:No such file or directory: ../crypto/bio/bss_file.c:74
- SSL error:2006D080:BIO routines:BIO_new_file:no such file: ../crypto/bio/bss_file.c:81
sign-file: certs/signing_key.pem: No such file or directory
Warning: modules_install: missing 'System.map' file. Skipping depmod.
Backup r8169.ko
rename r8169.ko to r8169.bak
DEPMOD 4.19.51-xanmod26
load module r8168
Updating initramfs. Please wait.
update-initramfs: Generating /boot/initrd.img-4.19.51-xanmod26
Completed.

######################## Debian 10 3.16.0-4, FAILED

Backup r8169.ko
rename r8169.ko to r8169.bak
DEPMOD 3.16.0-4-amd64
load module r8168
modprobe: ERROR: could not insert 'r8168': Exec format error
Updating initramfs. Please wait.
update-initramfs: Generating /boot/initrd.img-3.16.0-4-amd64
cryptsetup: ERROR: Couldn't resolve device rootfs
cryptsetup: WARNING: The initramfs image may not contain cryptsetup binaries 
    nor crypto modules. If that's on purpose, you may want to uninstall the 
    'cryptsetup-initramfs' package in order to disable the cryptsetup initramfs 
    integration and avoid this warning.
Completed.
}

